{"version":3,"file":"static/js/451.ab35fa0c.chunk.js","mappings":"0PAKaA,EAAgB,WAC3B,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBN,EAAUM,EAA3B,GAC5B,GAAE,CAACL,KAGF,0BACE,wBACGF,EAAOQ,OAAS,EACfR,EAAOS,KAAI,YAA2C,IAAxCC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YACjC,OACE,2BACE,wBAAKH,KACL,uBAAIC,KACJ,gBACEG,IAAG,8CAAyCD,GAC5CE,IAAI,aALCH,EASZ,KAED,+GAKT,EAEDd,EAAckB,UAAY,CACxBT,QAASU,IAAAA,OAAAA,YAGX,W,8LCvCMC,EAAW,6BACXC,EAAM,mCAAZ,SAEeC,EAAc,GAAdA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA6BC,GAA7B,gGAEuBC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,yFAAsGG,EAAtG,gCAFvB,cAEUE,EAFV,yBAGWA,EAAKC,MAHhB,gCAMIC,QAAQC,MAAR,MANJ,yFAUerB,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BO,GAA5B,gGAEuBU,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,oBAAiCN,EAAjC,4BAAuDO,IAF9E,cAEUI,EAFV,yBAGWA,EAAKC,MAHhB,gCAKIC,QAAQC,MAAR,MALJ,yFASeC,EAAU,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBf,GAAzB,gGAEuBU,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,oBAAiCN,EAAjC,4BAAuDO,IAF9E,cAEUI,EAFV,yBAGWA,EAAKC,MAHhB,gCAKIC,QAAQC,MAAR,MALJ,yFASeE,EAAU,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,GAAzB,gGAEuBP,EAAAA,EAAAA,IAAA,UACdJ,EADc,0CAC4BC,IAHnD,cAEUI,EAFV,yBAKWA,EAAKC,MALhB,gCAOIC,QAAQC,MAAR,MAPJ,yFAWeI,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BlB,GAA/B,gGAEuBU,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,oBAAiCN,EAAjC,oBAA+CO,IAFtE,cAEUI,EAFV,yBAGWA,GAHX,gCAKIE,QAAQC,MAAR,MALJ,gF","sources":["components/movies/review/MoviesReviews.jsx","components/serverApi.jsx"],"sourcesContent":["import { fetchReviews } from 'components/serverApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MoviesReviews = () => {\n  const [rewiev, setRewiev] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchReviews(movieId).then(({ results }) => setRewiev(results));\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {rewiev.length > 1 ? (\n          rewiev.map(({ author, content, id, avatar_path }) => {\n            return (\n              <li key={id}>\n                <h2>{author}</h2>\n                <p>{content}</p>\n                <img\n                  src={`https://image.tmdb.org/t/p/original/${avatar_path}`}\n                  alt=\"avatar\"\n                />\n              </li>\n            );\n          })\n        ) : (\n          <h2>немає відгуків</h2>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nMoviesReviews.prototype = {\n  results: PropTypes.object.isRequired,\n};\n\nexport default MoviesReviews;","import axios from 'axios';\n\nconst URL_BASA = 'https://api.themoviedb.org';\nconst key = 'e74f8e13c620ae3b84b14599ba3d0b44';\n\nasync function searchMovieId(qury) {\n  try {\n    const resp = await axios.get(`${URL_BASA}/3/search/movie?api_key=e74f8e13c620ae3b84b14599ba3d0b44&language=en-US&query=${qury}&page=1&include_adult=false`);\n    return resp.data;\n   \n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchReviews(id) {\n  try {\n    const resp = await axios.get(`${URL_BASA}/3/movie/${id}/reviews?api_key=${key}`);\n    return resp.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchCast(id) {\n  try {\n    const resp = await axios.get(`${URL_BASA}/3/movie/${id}/credits?api_key=${key}`);\n    return resp.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchData(q) {\n  try {\n    const resp = await axios.get(\n      `${URL_BASA}/3/trending/movie/week?api_key=${key}`\n    );\n    return resp.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchDetalsFilm(id) {\n  try {\n    const resp = await axios.get(`${URL_BASA}/3/movie/${id}?api_key=${key}`);\n    return resp;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport { fetchData, fetchDetalsFilm, fetchReviews, fetchCast, searchMovieId };"],"names":["MoviesReviews","useState","rewiev","setRewiev","movieId","useParams","useEffect","fetchReviews","then","results","length","map","author","content","id","avatar_path","src","alt","prototype","PropTypes","URL_BASA","key","searchMovieId","qury","axios","resp","data","console","error","fetchCast","fetchData","q","fetchDetalsFilm"],"sourceRoot":""}