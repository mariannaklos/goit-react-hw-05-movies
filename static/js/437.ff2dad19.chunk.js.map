{"version":3,"file":"static/js/437.ff2dad19.chunk.js","mappings":"8SAEMA,EAAW,6BACXC,EAAM,mCAAZ,SAEeC,EAAc,GAAdA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA6BC,GAA7B,gGAEuBC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,yFAAsGG,EAAtG,gCAFvB,cAEUE,EAFV,yBAGWA,EAAKC,MAHhB,gCAMIC,QAAQC,MAAR,MANJ,yFAUeC,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,gGAEuBN,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,oBAAiCU,EAAjC,4BAAuDT,IAF9E,cAEUI,EAFV,yBAGWA,EAAKC,MAHhB,gCAKIC,QAAQC,MAAR,MALJ,yFASeG,EAAU,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBD,GAAzB,gGAEuBN,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,oBAAiCU,EAAjC,4BAAuDT,IAF9E,cAEUI,EAFV,yBAGWA,EAAKC,MAHhB,gCAKIC,QAAQC,MAAR,MALJ,yFASeI,EAAU,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,GAAzB,gGAEuBT,EAAAA,EAAAA,IAAA,UACdJ,EADc,0CAC4BC,IAHnD,cAEUI,EAFV,yBAKWA,EAAKC,MALhB,gCAOIC,QAAQC,MAAR,MAPJ,yFAWeM,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BJ,GAA/B,gGAEuBN,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,oBAAiCU,EAAjC,oBAA+CT,IAFtE,cAEUI,EAFV,yBAGWA,GAHX,gCAKIE,QAAQC,MAAR,MALJ,gF,4ICpCMO,EAAa,WAAO,IAAD,IACvB,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,iBAACH,QAAD,IAACA,GAAD,UAACA,EAAUI,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,WAK5D,OAHAC,EAAAA,EAAAA,YAAU,YACRb,EAAAA,EAAAA,IAAgBK,GAASS,MAAK,SAAAvB,GAAI,OAAIa,EAAYb,EAAKC,KAArB,GACnC,GAAE,CAACa,KAEF,iBAAKU,UAAU,YAAf,WACE,SAAC,KAAD,CAAMC,GAAIP,EAAoBQ,QAASF,UAAU,MAAjD,mBAGA,gBACEG,IAAG,8CAAyCf,EAASgB,eACrDC,IAAKjB,EAASkB,MACdC,MAAM,WAER,wBAAKnB,EAASoB,kBACd,uBAAIpB,EAASqB,YACb,4BACE,SAAC,KAAD,CAAMR,GAAG,OAAOD,UAAU,MAA1B,mBAGA,SAAC,KAAD,CAAMC,GAAG,UAAUD,UAAU,MAA7B,yBAIF,SAAC,EAAAU,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,EAED,IAEAzB,EAAW0B,UAAY,CACrBpC,KAAMqC,IAAAA,MAAAA,W","sources":["components/serverApi.jsx","pages/DetalFilm/DetalFilms.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL_BASA = 'https://api.themoviedb.org';\nconst key = 'e74f8e13c620ae3b84b14599ba3d0b44';\n\nasync function searchMovieId(qury) {\n  try {\n    const resp = await axios.get(`${URL_BASA}/3/search/movie?api_key=e74f8e13c620ae3b84b14599ba3d0b44&language=en-US&query=${qury}&page=1&include_adult=false`);\n    return resp.data;\n   \n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchReviews(id) {\n  try {\n    const resp = await axios.get(`${URL_BASA}/3/movie/${id}/reviews?api_key=${key}`);\n    return resp.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchCast(id) {\n  try {\n    const resp = await axios.get(`${URL_BASA}/3/movie/${id}/credits?api_key=${key}`);\n    return resp.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchData(q) {\n  try {\n    const resp = await axios.get(\n      `${URL_BASA}/3/trending/movie/week?api_key=${key}`\n    );\n    return resp.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchDetalsFilm(id) {\n  try {\n    const resp = await axios.get(`${URL_BASA}/3/movie/${id}?api_key=${key}`);\n    return resp;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport { fetchData, fetchDetalsFilm, fetchReviews, fetchCast, searchMovieId };","import { fetchDetalsFilm } from 'components/serverApi';\nimport { useState, useEffect, useRef } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Suspense } from 'react';\nimport './detalFilms.css';\n\nconst DetalFilms = () => {\n  const [filmInfo, setFilmInfo] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location?.state?.from ?? '/movies');\n\n  useEffect(() => {\n    fetchDetalsFilm(movieId).then(resp => setFilmInfo(resp.data));\n  }, [movieId]);\n  return (\n    <div className=\"info__mov\">\n      <Link to={backLinkLocationRef.current} className=\"btn\">\n        Back\n      </Link>\n      <img\n        src={`https://image.tmdb.org/t/p/original/${filmInfo.backdrop_path}`}\n        alt={filmInfo.title}\n        width=\"600px\"\n      />\n      <h2>{filmInfo.original_title}</h2>\n      <p>{filmInfo.overview}</p>\n      <div>\n        <Link to=\"cast\" className=\"btn\">\n          Cast\n        </Link>\n        <Link to=\"reviews\" className=\"btn\">\n          Reviews\n        </Link>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default DetalFilms;\n\nDetalFilms.prototype = {\n  resp: PropTypes.array.isRequired,\n};"],"names":["URL_BASA","key","searchMovieId","qury","axios","resp","data","console","error","fetchReviews","id","fetchCast","fetchData","q","fetchDetalsFilm","DetalFilms","useState","filmInfo","setFilmInfo","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","then","className","to","current","src","backdrop_path","alt","title","width","original_title","overview","Suspense","fallback","prototype","PropTypes"],"sourceRoot":""}