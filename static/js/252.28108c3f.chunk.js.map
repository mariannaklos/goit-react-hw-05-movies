{"version":3,"file":"static/js/252.28108c3f.chunk.js","mappings":"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","sources":["components/serverApi.jsx","pages/filmFind/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL_BASA = 'https://api.themoviedb.org';\nconst key = 'e74f8e13c620ae3b84b14599ba3d0b44';\n\nasync function searchMovieId(qury) {\n  try {\n    const resp = await axios.get(`${URL_BASA}/3/search/movie?api_key=e74f8e13c620ae3b84b14599ba3d0b44&language=en-US&query=${qury}&page=1&include_adult=false`);\n    return resp.data;\n   \n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchReviews(id) {\n  try {\n    const resp = await axios.get(`${URL_BASA}/3/movie/${id}/reviews?api_key=${key}`);\n    return resp.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchCast(id) {\n  try {\n    const resp = await axios.get(`${URL_BASA}/3/movie/${id}/credits?api_key=${key}`);\n    return resp.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchData(q) {\n  try {\n    const resp = await axios.get(\n      `${URL_BASA}/3/trending/movie/week?api_key=${key}`\n    );\n    return resp.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchDetalsFilm(id) {\n  try {\n    const resp = await axios.get(`${URL_BASA}/3/movie/${id}?api_key=${key}`);\n    return resp;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport { fetchData, fetchDetalsFilm, fetchReviews, fetchCast, searchMovieId };","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { searchMovieId } from '../../components/serverApi';\nimport PropTypes from 'prop-types';\nimport './findFilm-styled.css';\nexport const Movies = () => {\n  const [serch, setSerch] = useSearchParams();\n  const [getMovies, setGetMovies] = useState([]);\n  const [valueInput, setValueInput] = useState({});\n  const location = useLocation();\n  const findNameFilms = serch.get('qury') ?? '';\n\n  useEffect(() => {\n    if (findNameFilms !== null) {\n      searchMovieId(findNameFilms).then(resp => setGetMovies(resp.results));\n    }\n  }, [findNameFilms]);\n\n  const updateQueryString = name => {\n    const nameMov = name.target.value;\n    const quryMov = nameMov !== '' ? { qury: nameMov } : {};\n    setValueInput(quryMov);\n  };\n\n  const submitForm = e => {\n    e.preventDefault();\n    setSerch(valueInput);\n    setValueInput({});\n  };\n  return (\n    <div className=\"find__mov\">\n      <form onSubmit={submitForm}>\n        <input type=\"text\" onChange={updateQueryString} className=\"inputFilm\" />\n        <button type=\"submit\" className=\"btn__find\">\n          send\n        </button>\n      </form>\n      <ul className=\"mov__list\">\n        {findNameFilms.length > 1 ? (\n          getMovies.map(({ title, id }) => {\n            return (\n              <li key={id}>\n                <Link\n                  state={{ from: location }}\n                  to={`/movies/${id}`}\n                  className=\"mov__link\"\n                >\n                  {title}\n                </Link>\n              </li>\n            );\n          })\n        ) : (\n          <li></li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nMovies.prototype = {\n  resp: PropTypes.array.isRequired,\n};\n\nexport default Movies;"],"names":["URL_BASA","key","searchMovieId","qury","axios","resp","data","console","error","fetchReviews","id","fetchCast","fetchData","q","fetchDetalsFilm","Movies","useSearchParams","serch","setSerch","useState","getMovies","setGetMovies","valueInput","setValueInput","location","useLocation","findNameFilms","get","useEffect","then","results","className","onSubmit","e","preventDefault","type","onChange","name","nameMov","target","value","length","map","title","state","from","to","prototype","PropTypes"],"sourceRoot":""}